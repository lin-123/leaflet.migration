(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[17],{"9kvl":function(e,t,n){"use strict";var a=n("FfOG");n.d(t,"a",(function(){return a["b"]}));n("bCY9")},afA6:function(e,t,n){"use strict";n.r(t);var a=n("mn0l"),r=n("ahKI"),o=n.n(r),s=n("q3YX"),i=n("DBVu"),l=n("GAyR"),u=n("wMDr"),c="import { useRef, useState } from 'react';\nimport BaseMap from './demos/BaseMap';\nimport { Example } from './demos/Example';\n\nexport default function Demo() {\n  const [visible, setVisible] = useState(true);\n  const layerRef = useRef();\n  return <div>\n    <BaseMap style={{ height: 600 }} latitude={35.4199} longitude={95.2402} zoom={4}>\n      <Example\n        visible={visible}\n        dataLen={10}\n        ref={layerRef}\n        replacePopover={(x, y, data, index) => {\n          console.log(x, y, data, index, 'replace popover');\n          return `value: ${data.value} from: ${data.labels[1]} to: ${data.labels[0]}`\n        }}\n        onShowPopover={(data, index) => {\n          console.log(data, index, 'show popover');\n        }}\n        onHidePopover={(data) => {\n          console.log('hide popover', data);\n        }}\n      />\n    </BaseMap>\n    <div className=\"control\">\n      <button onClick={() => layerRef.current?.updateData()}>rendomData</button>\n      <button onClick={() => layerRef.current?.updateStyle()}>rendomStyle</button>\n      <button onClick={() => setVisible(false)}>hide</button>\n      <button onClick={() => setVisible(true)}>show</button>\n    </div>\n  </div>;\n}",m="/**\n * base map with tillayer\n *\n * */\nimport React, { useEffect, useRef, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nexport const MapContext = React.createContext<any>({\n  map: null,\n});\nexport const useMapContext = () => React.useContext(MapContext);\n\nexport default function BaseMap({\n  latitude, longitude, zoom, children, style\n}) {\n  const [ready, setReady] = useState(false);\n  const elRef = useRef<any>();\n  const mapRef = useRef<any>();\n\n  useEffect(() => {\n    const map = L.map(elRef.current).setView([latitude, longitude], zoom);\n    L.tileLayer(\n      'http://webrd0{s}.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=8&x={x}&y={y}&z={z}',\n      {\n        subdomains: ['1', '2', '3', '4'],\n      },\n    ).addTo(map);\n    mapRef.current = map;\n    setReady(true);\n    return () => {\n      map.remove();\n    }\n  }, []);\n\n  return (\n    <MapContext.Provider value={{ map: mapRef.current }}>\n      <div ref={elRef} style={style}>\n        {ready && children}\n      </div>\n    </MapContext.Provider>\n  );\n}",d="import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport MigrationLayer from './MigrationLayer';\nimport { randomDataByLen } from './mock';\n\nexport const Example = forwardRef(({ dataLen = 10, visible, ...props }, ref) => {\n  const [data, setData] = useState(randomDataByLen(dataLen));\n  const [options, setOptions] = useState( {\n    marker: {\n      // [min, max]\n      radius: [5, 10],\n      // show marker ring animation\n      pulse: true,\n      textVisible: true\n    },\n    line: {\n      width: 1,\n      order: false,\n      icon: {\n        type: 'circle',\n        imgUrl: '',\n        size: 10\n      },\n    }\n  });\n  const updateStyle = () => {\n    options.marker.radius[1] = Math.random() * 20;\n    options.line.width = Math.random() * 5;\n    setOptions({ ...options });\n  };\n  const updateData = () => setData(randomDataByLen(dataLen));\n\n  useImperativeHandle(ref, () => ({\n    updateStyle,\n    updateData\n  }));\n  return <MigrationLayer visible={visible} data={data} options={options} {...props}></MigrationLayer>\n});",p="import React, { useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet.migration';\nimport { useMapContext } from './BaseMap';\nimport { forwardRef } from 'react';\nimport { useImperativeHandle } from 'react';\n\nconst MigrationLayer = forwardRef(({\n  visible = true, data, options, replacePopover, onShowPopover, onHidePopover,\n}, ref) => {\n  const { map } = useMapContext();\n  const layerRef = useRef<any>(null);\n  const getOptions = () => ({\n    ...options,\n    replacePopover, onShowPopover, onHidePopover\n  });\n  // \u7559\u7740\u5907\u7528\n  useImperativeHandle(ref, () => ({\n    target: layerRef.current,\n  }));\n\n  useEffect(() => {\n    if (!map) return;\n\n    layerRef.current = L.migrationLayer(data, getOptions());\n    console.log(map)\n    const layer = map.addLayer(layerRef.current);\n    return () => {\n      map.removeLayer(layer);\n    }\n  }, []);\n\n  useEffect(() => {\n    layerRef.current?.setData(data);\n  }, [data])\n\n  useEffect(() => {\n    layerRef.current?.setStyle(getOptions()); // \u786e\u4fddoptions\u53d8\u5316\u65f6\u91cd\u65b0\u8bbe\u7f6e\u56fe\u5c42\u9009\u9879\n  }, [options]);\n\n  useEffect(() => {\n    layerRef.current[visible ? 'show' : 'hide']();\n  }, [visible]);\n  return null;\n});\n\nexport default MigrationLayer;",f="// \u6279\u91cf\u6a21\u62df\u6570\u636e\nconst randomNum = (start: number, end: number) => Math.floor(start + (end - start) * Math.random());\n\nexport const genData = (length: number, interator) => {\n  return Array.from({ length }, (i, idx) => {\n    return interator({\n      color: 'rgb(101, 169, 249)',\n      from: [randomNum(84, 116), randomNum(32, 48)],\n      to: [randomNum(84, 116), randomNum(32, 48)],\n      labels: [`from-${idx}`, `to-${idx}`],\n      value: randomNum(1, 10),\n    });\n  });\n};\n\nexport const randomDataByLen = (len) => genData(len, (i) => ({\n  ...i,\n  // to: [116.404844, 32.91405],\n  from: [96.404844, 40],\n  labels: ['somewhere', i.labels[1]]\n}));\n\nexport const data = randomDataByLen(10);\n\nexport const inData = genData(10, (i) => ({\n  ...i,\n  color: 'rgba(251,176,49,0.8)',\n  to: [116.404844, 39.91405],\n  labels: [i.labels[0], '\u5317\u4eac']\n}));",v={"docs-demo":{component:Object(u["dynamic"])({loader:function(){var e=Object(l["a"])(Object(i["a"])().mark((function e(){return Object(i["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([n.e(1),n.e(3),n.e(5),n.e(6),n.e(9)]).then(n.bind(null,"2uR0"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:c},"demos/BaseMap.tsx":{import:"./demos/BaseMap",content:m},"demos/Example.tsx":{import:"./demos/Example",content:d},"demos/MigrationLayer.tsx":{import:"./MigrationLayer",content:p},"demos/mock.ts":{import:"./mock",content:f}},dependencies:{react:{version:"18.2.0"},leaflet:{version:"1.8.0",css:"leaflet/dist/leaflet.css"},"leaflet.migration":{version:"2.3.8"}},description:'<div class="markdown"><p>demo \u63cf\u8ff0</p></div>',identifier:"docs-demo"}},"large-demo":{component:Object(u["dynamic"])({loader:function(){var e=Object(l["a"])(Object(i["a"])().mark((function e(){var t,a,r,o,s,l,u;return Object(i["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return u=function(){var e=(0,o.useState)(!0),t=(0,r["default"])(e,2),n=t[0];t[1];return o["default"].createElement("div",null,o["default"].createElement(s["default"],{style:{height:600},latitude:35.4199,longitude:95.2402,zoom:4},o["default"].createElement(l.Example,{visible:n,dataLen:600})),o["default"].createElement("div",{className:"control"}))},t=n("P/vu")["default"],a=n("uKmp")["default"],e.t0=a,e.next=6,Promise.resolve().then(n.bind(null,"iojd"));case 6:return e.t1=e.sent,r=(0,e.t0)(e.t1),e.t2=t,e.next=11,Promise.resolve().then(n.t.bind(null,"ahKI",7));case 11:return e.t3=e.sent,o=(0,e.t2)(e.t3),e.t4=a,e.next=16,Promise.all([n.e(3),n.e(7)]).then(n.bind(null,"rrNk"));case 16:return e.t5=e.sent,s=(0,e.t4)(e.t5),e.next=20,Promise.all([n.e(1),n.e(3),n.e(5),n.e(6)]).then(n.bind(null,"suVT"));case 20:return l=e.sent,e.abrupt("return",u);case 22:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:"import React, { useEffect, useState } from 'react';\nimport BaseMap from './demos/BaseMap';\nimport { Example } from './demos/Example';\n\nexport default function Large() {\n  const [visible, setVisible] = useState(true);\n  return <div>\n    <BaseMap style={{ height: 600 }} latitude={35.4199} longitude={95.2402} zoom={4}>\n      <Example\n        visible={visible}\n        dataLen={600}\n      />\n    </BaseMap>\n    <div className=\"control\">\n    </div>\n  </div>;\n}"},"demos/BaseMap.tsx":{import:"./demos/BaseMap",content:m},"demos/Example.tsx":{import:"./demos/Example",content:d},"demos/MigrationLayer.tsx":{import:"./MigrationLayer",content:p},"demos/mock.ts":{import:"./mock",content:f}},dependencies:{react:{version:"18.2.0"},leaflet:{version:"1.8.0",css:"leaflet/dist/leaflet.css"},"leaflet.migration":{version:"2.3.8"}},identifier:"large-demo"}},"multiInstance-demo":{component:Object(u["dynamic"])({loader:function(){var e=Object(l["a"])(Object(i["a"])().mark((function e(){var t,a,r,o,s,l;return Object(i["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return l=function(){var e=(0,r.useRef)();return r["default"].createElement("div",null,r["default"].createElement(o["default"],{style:{height:600},latitude:35.4199,longitude:95.2402,zoom:4},r["default"].createElement(s.Example,{dataLen:1,ref:e}),r["default"].createElement(s.Example,{dataLen:2})),r["default"].createElement("div",{className:"control"},r["default"].createElement("button",{onClick:function(){var t;return null===(t=e.current)||void 0===t?void 0:t.updateData()}},"rendomData"),r["default"].createElement("button",{onClick:function(){var t;return null===(t=e.current)||void 0===t?void 0:t.updateStyle()}},"rendomStyle")))},t=n("uKmp")["default"],a=n("P/vu")["default"],e.t0=a,e.next=6,Promise.resolve().then(n.t.bind(null,"ahKI",7));case 6:return e.t1=e.sent,r=(0,e.t0)(e.t1),e.t2=t,e.next=11,Promise.all([n.e(3),n.e(7)]).then(n.bind(null,"rrNk"));case 11:return e.t3=e.sent,o=(0,e.t2)(e.t3),e.next=15,Promise.all([n.e(1),n.e(3),n.e(5),n.e(6)]).then(n.bind(null,"suVT"));case 15:return s=e.sent,e.abrupt("return",l);case 17:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:"import React, { useRef } from 'react';\nimport BaseMap from './demos/BaseMap';\nimport { Example } from './demos/Example';\n\nexport default function MultiInst() {\n  const m1 = useRef();\n  return <div>\n    <BaseMap style={{ height: 600 }} latitude={35.4199} longitude={95.2402} zoom={4}>\n      <Example dataLen={1} ref={m1}></Example>\n      <Example dataLen={2} />\n    </BaseMap>\n    <div className=\"control\">\n      <button onClick={() => m1.current?.updateData()}>rendomData</button>\n      <button onClick={() => m1.current?.updateStyle()}>rendomStyle</button>\n    </div>\n  </div>;\n}"},"demos/BaseMap.tsx":{import:"./demos/BaseMap",content:m},"demos/Example.tsx":{import:"./demos/Example",content:d},"demos/MigrationLayer.tsx":{import:"./MigrationLayer",content:p},"demos/mock.ts":{import:"./mock",content:f}},dependencies:{react:{version:"18.2.0"},leaflet:{version:"1.8.0",css:"leaflet/dist/leaflet.css"},"leaflet.migration":{version:"2.3.8"}},identifier:"multiInstance-demo"}},"play-demo":{component:Object(u["dynamic"])({loader:function(){var e=Object(l["a"])(Object(i["a"])().mark((function e(){var t,a,r;return Object(i["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return t=n("uKmp")["default"],e.t0=t,e.next=4,Promise.resolve().then(n.t.bind(null,"ahKI",7));case 4:return e.t1=e.sent,a=(0,e.t0)(e.t1),r=function(){var e=a["default"].useRef(null),t=a["default"].useRef(null);return a["default"].useEffect((function(){var n=document.createElement("img");n.src="https://github.githubassets.com/favicons/favicon.png",n.width=100;var a=e.current.getContext("2d");n.onload=function(){a.save(),a.rotate(Math.PI/180*60),a.drawImage(n,20,-20),a.restore();var r=t.current.getContext("2d");t.current.width=e.current.width,t.current.height=e.current.height,r.drawImage(e.current,0,0)}}),[]),a["default"].createElement("div",null,a["default"].createElement("img",{src:"https://github.githubassets.com/favicons/favicon.png"}),a["default"].createElement("canvas",{ref:e,style:{border:"1px solid"},width:100,height:100}),a["default"].createElement("canvas",{ref:t,style:{border:"1px solid"}}))},e.abrupt("return",r);case 8:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:"import React from 'react';\nexport default () => {\n  const canvas = React.useRef(null);\n  const tmpCanvas = React.useRef(null);\n  React.useEffect(() => {\n    const img = document.createElement('img');\n    img.src = 'https://github.githubassets.com/favicons/favicon.png';\n    img.width = 100;\n\n    const ctx = canvas.current.getContext('2d');\n    img.onload = () => {\n      ctx.save();\n      ctx.rotate(60*(Math.PI/180));\n      ctx.drawImage(img, 20, -20);\n      ctx.restore();\n\n      const tmpCtx = tmpCanvas.current.getContext('2d');\n      tmpCanvas.current.width = canvas.current.width;\n      tmpCanvas.current.height = canvas.current.height;\n      tmpCtx.drawImage(canvas.current,0,0); // \u5c06\u7f13\u5b58 canvas \u590d\u5236\u5230\u65e7\u7684 canvas\n    }\n  }, []);\n\n  return <div>\n    <img src=\"https://github.githubassets.com/favicons/favicon.png\"/>\n    <canvas ref={canvas} style={{ border: '1px solid' }} width={100} height={100} />\n\n    <canvas ref={tmpCanvas} style={{ border: '1px solid' }} />\n  </div>\n}"}},dependencies:{react:{version:"18.2.0"}},identifier:"play-demo"}}},h=n("x2v5"),g=n("BXQl"),x=n.n(g);t["default"]=e=>o.a.createElement(x.a,Object(a["a"])({},e,{config:s,demos:v,apis:h}))},q3YX:function(e){e.exports=JSON.parse('{"menus":{"en-US":{"*":[{"path":"/","title":"leaflet.migration","meta":{"order":null}},{"path":"/demo","title":"Demo","meta":{"order":1}},{"path":"/large","title":"large","meta":{"order":1}},{"path":"/multi-instance","title":"MultiInstance","meta":{"order":1}},{"path":"/changelog","title":"CHANGELOG","meta":{"order":2}}]}},"locales":[{"name":"en-US","label":"English"}],"navs":{},"title":"leaflet.migration","logo":"https://user-images.githubusercontent.com/9554297/83762004-a0761b00-a6a9-11ea-83b4-9c8ff721d4b8.png","mode":"doc","repository":{"url":"https://github.com/lin-123/leaflet.migration","branch":"master"},"theme":{}}')},x2v5:function(e){e.exports=JSON.parse("{}")}}]);